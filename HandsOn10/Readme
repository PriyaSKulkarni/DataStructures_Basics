I have implemented a hash table according to the given specifications and uploaded the code to GitHub.

The hash table utilizes both the multiplication and division methods for the hash function. It is designed to handle keys and values of integer types, with collision resolution implemented using chaining through a doubly linked list.

To ensure versatility, the code allows for any hash function to be used. It strictly employs C-style arrays and does not rely on C++ vectors.

The hash table dynamically adjusts its size: when it becomes full, the array size is doubled and all elements are re-hashed. Conversely, if it becomes too empty (e.g., 1/4 empty), the array size is halved and all elements are re-hashed accordingly.

For simplicity, the implementation assumes integer keys and values. Custom doubly linked list functionalities have been coded rather than relying on standard libraries like "list" in C++.

The code is available on GitHub with the necessary documentation and explanations.
